// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Poppler {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Annot : GLib.Object {

		[Obsolete]
		protected Annot(GLib.GType gtype) : base(gtype) {}
		public Annot(IntPtr raw) : base(raw) {}

		protected Annot() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("poppler-glib")]
		static extern IntPtr poppler_annot_get_name(IntPtr raw);

		public string Name { 
			get {
				IntPtr raw_ret = poppler_annot_get_name(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern IntPtr poppler_annot_get_color(IntPtr raw);

		public Poppler.Color Color { 
			get {
				IntPtr raw_ret = poppler_annot_get_color(Handle);
				Poppler.Color ret = Poppler.Color.New (raw_ret);
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern int poppler_annot_get_annot_type(IntPtr raw);

		public Poppler.AnnotType AnnotType { 
			get {
				int raw_ret = poppler_annot_get_annot_type(Handle);
				Poppler.AnnotType ret = (Poppler.AnnotType) raw_ret;
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern int poppler_annot_get_flags(IntPtr raw);

		public Poppler.AnnotFlag Flags { 
			get {
				int raw_ret = poppler_annot_get_flags(Handle);
				Poppler.AnnotFlag ret = (Poppler.AnnotFlag) raw_ret;
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern IntPtr poppler_annot_get_contents(IntPtr raw);

		public string Contents { 
			get {
				IntPtr raw_ret = poppler_annot_get_contents(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern IntPtr poppler_annot_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = poppler_annot_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("poppler-glib")]
		static extern IntPtr poppler_annot_get_modified(IntPtr raw);

		public string Modified { 
			get {
				IntPtr raw_ret = poppler_annot_get_modified(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
